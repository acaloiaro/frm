package collector

import (
	"context"
	"fmt"

	"github.com/acaloiaro/frm"
	"github.com/acaloiaro/frm/internal"
	"github.com/acaloiaro/frm/ui"
	"github.com/acaloiaro/frm/ui/fields"
)

// Builder is the primary form builder UI, surrounded by the app chrome
templ Viewer(form frm.Form) {
	@ui.App(form.Name) {
		<div class="bg-sky-100 h-screen">
			<section id="app-container" class="container mx-auto">
				@FormView(form, false)
			</section>
		</div>
	}
}

// FormPreview previews a frm.Form
templ FormPreview(form frm.Form) {
	<section id="builder-main-middle-col" class="w-full h-screen overflow-y-auto overscroll-auto p-4 bg-gray-50 border-y-1">
		<div class="mockup-browser border-base-300 border overflow-visible">
			<div class="mockup-browser-toolbar">
				<div class="input border-base-300 border">https://your-form-domain.com/form</div>
			</div>
			<div class="flex h-full border-base-300 bg-sky-100 border-t px-4 py-8">
				@FormView(form, true)
			</div>
		</div>
	</section>
}

// FormView is a view of Forms
templ FormView(form frm.Form, isPreview bool) {
	<div id="form-viewer" class="flex flex-col w-1/2 mx-auto justify-top pt-12" data-hx-swap-oob="true">
		<div
			id="form-metadata"
			data-data={ ui.ViewerMetadata{Form: form}.JSON() }
		></div>
		<h1 class="rounded relative mb-2 font-black text-slate-700 text-5xl">
			{ form.Name }
		</h1>
		<div id="form-input">
			<form
				_="on field_change(field_id, value) formValueChanged(field_id, value)"
			>
				<input name="submission_id" type="hidden" value="changeme!"/>
				if sc := shortCode(ctx); sc != nil {
					<input name="short_code" type="hidden" value={ *sc }/>
				}
				for _, field := range fields.SortFields(form.Fields) {
					<div
						id={ fmt.Sprintf("field-container-%s", field.ID.String()) }
						if field.Hidden {
							class="flex flex-col py-3 hidden"
						} else {
							class="flex flex-col py-3"
						}
					>
						<div
							id={ fmt.Sprintf("errors-%s", field.ID.String()) }
							class="text-red-400"
						></div>
						@fields.View(field)
					</div>
				}
				<div class="py-3"></div>
				@ui.Button(ui.ButtonArgs{
					Label:   "submit",
					Type:    "submit",
					Classes: []string{"flex-grow", "justify-center", "uppercase"},
				}, templ.Attributes{
					"type":               "submit",
					"data-hx-post":       formCollectorUrl[string](ctx, form),
					"data-hx-trigger":    "click",
					"data-hx-target":     "#form-input",
					"data-hx-target-400": "form",
					"disabled":           isPreview,
				},
				)
			</form>
		</div>
	</div>
}

templ ThankYou() {
	@ui.App("Thank you") {
		<div class="bg-sky-100 h-screen">
			<section id="app-container" class="container mx-auto">
				<p class="text-4xl pt-9">Thank you!</p>
			</section>
		</div>
	}
}

// shortCode gets the short code from the request context, if present
func shortCode(ctx context.Context) (shortCode *string) {
	var ok bool
	shortCode, ok = ctx.Value(internal.ShortCodeContextKey).(*string)
	if !ok {
		return
	}
	return
}

// formCollectorUrl returns form collector URLs for the given form and additional path arguments
func formCollectorUrl[T string | templ.SafeURL](ctx context.Context, form frm.Form, path ...string) T {
	return T(frm.CollectorPathForm(ctx, form.ID, path...))
}
